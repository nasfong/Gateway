"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.isAliasError = exports.isAliasAssigned = exports.isDone = exports.isFailed = exports.isReady = void 0;
const isReady = ({ readyState, state, }) => readyState === 'READY' || state === 'READY';
exports.isReady = isReady;
const isFailed = ({ readyState, state, }) => {
    if (readyState) {
        return readyState.endsWith('_ERROR') || readyState === 'ERROR';
    }
    if (!state) {
        return false;
    }
    // TS is convinced `state` is `never`, but it's definitely a `string | undefined` entering this function
    return state.endsWith('_ERROR') || state === 'ERROR';
};
exports.isFailed = isFailed;
const isDone = (buildOrDeployment) => (0, exports.isReady)(buildOrDeployment) || (0, exports.isFailed)(buildOrDeployment);
exports.isDone = isDone;
const isAliasAssigned = (deployment) => Boolean(deployment.aliasAssigned);
exports.isAliasAssigned = isAliasAssigned;
const isAliasError = (deployment) => Boolean(deployment.aliasError);
exports.isAliasError = isAliasError;
